/*

    자바 스크립트 오브젝트
    오브젝트 구분
    빌트인 오브젝트
    네이티브 오브젝트
    호스트 오브젝트

    빌트인 오브젝트
    - 사전에 만들어 놓은 오브젝트
    - 빌트인 Number 오브젝트, 빌트인 String오브젝트
    + ES5기준 11개의 빌트인 오브젝트가 있음

    네이티브 오브젝트
    - JS 스펙에서 정의한 오브젝트
    - 빌트인 오브젝트 포함, 여기에
    - JS 코드를 실행할 때 만드는 오브젝트

    예: Argument 오브젝트

    호스트 오브젝트
    - 빌트인, 네이티브 오브젝트를 제외한 오브젝트
    ex:) window, DOM(Document Object Model) 오브젝트
    즉 네이티브 오브젝트가 아니면 전부 호스트 오브젝트다

    -JS는 호스트 환경에서
      * 브라우저의 모든 요소 기술을 제어
      * 연결하고 융합하여 이를 제어
*/

var node = document.querySelector("div");
console.log(node.nodeName);

//1. queyrSelector()는 DOM함수
//2. DOM에서 제공하는 오브젝트를 호스트(Host) 오브젝트라고 부릅니다.
//3. 마치 JS함수처럼 DOM함수를 사용

// 자바스크립트 개발자는 자바스크립트 하나만으로 끝나는것이 아니다 ***
// 즉 호스트 환경의 호스트 오브젝트를 하나씩 배워나가야 한다.
// 마우스 클릭을 인식하려면 DOM을 배워야한다.

// 브라우저에는 모든 요소 기술이 매우 많고
// 계속해서 나올것이다!(호스트 오브젝트)

// 이것이 자바스크립트 개발자의 방향성이다!

/*

    오브젝트와 인스턴스
    강좌에서는 오브젝트와 인스턴스를 구분한다

    -강좌에서 오브젝트는
    new 연산자를 사용하지 않고
    빌트인 오브젝트로 만든 오브젝트를 지칭
    
    
    var abc = new Object();
    new Object를 사용 하였으므로 인스턴스
    var obj = {};
    new 연산자를 사용했으므로 인스턴스

    오브젝트를 번역하면 객체이지만 뉘앙스의 차이가 있으며 단계적으로 설명하실 예정
    
    객체는 주체적인 측면과 개념적인 측면으로 구분할 수 있음.
    여기서 오브젝트는 프로퍼티여서 구체적으로 보이지만 개념적으로 들어가면 실체가 없기 때문에 안보인다.

    그래서 다른 책으로 공부할 때는 앞뒤 문맥을 좀 봐야한다!
*/


